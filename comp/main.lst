

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 06 08:01:32 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,inline
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.32
    28                           ; Generated 02/02/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     _AOUT	set	488
    63  0000                     _DOUT	set	480
    64  0000                     _M_ADU	set	32
    65  0000                     _RCREG	set	4014
    66  0000                     _PIR1bits	set	3998
    67  0000                     _TXREG	set	4013
    68  0000                     _T0CONbits	set	4053
    69  0000                     _TMR0H	set	4055
    70  0000                     _TMR0L	set	4054
    71  0000                     _INTCONbits	set	4082
    72  0000                     _T0CON	set	4053
    73  0000                     _ADCON2	set	4032
    74  0000                     _ADCON1	set	4033
    75  0000                     _TRISE	set	3990
    76  0000                     _TRISD	set	3989
    77  0000                     _TRISC	set	3988
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISA	set	3986
    80  0000                     _LATE	set	3981
    81  0000                     _LATD	set	3980
    82  0000                     _LATC	set	3979
    83  0000                     _LATB	set	3978
    84  0000                     _LATA	set	3977
    85  0000                     _SSPBUF	set	4041
    86  0000                     _SSPCON1	set	4038
    87  0000                     _SSPSTAT	set	4039
    88  0000                     _SPBRGH	set	4016
    89  0000                     _SPBRG	set	4015
    90  0000                     _TXSTAbits	set	4012
    91  0000                     _BAUDCONbits	set	4024
    92  0000                     _RCSTAbits	set	4011
    93  0000                     _LATDbits	set	3980
    94  0000                     _TRISCbits	set	3988
    95  0000                     _SSPIF	set	31987
    96  0000                     _EAIN	set	486
    97  0000                     _SAIN	set	481
    98                           
    99                           	psect	nvCOMRAMh
   100  00001F                     __pnvCOMRAMh:
   101                           	callstack 0
   102  00001F                     _Z:
   103                           	callstack 0
   104  00001F                     	ds	2
   105  0000                     _DIN	set	479
   106  0000                     _AIN	set	496
   107                           
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111  002D08                     __pcinit:
   112                           	callstack 0
   113  002D08                     start_initialization:
   114                           	callstack 0
   115  002D08                     __initialization:
   116                           	callstack 0
   117  002D08                     end_of_initialization:
   118                           	callstack 0
   119  002D08                     __end_of__initialization:
   120                           	callstack 0
   121  002D08  0100               	movlb	0
   122  002D0A  EF8F  F016         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	cstackCOMRAMh
   125  000001                     __pcstackCOMRAMh:
   126                           	callstack 0
   127  000001                     ?_CRC_calc:
   128                           	callstack 0
   129  000001                     MODBUS_TX@M_size:
   130                           	callstack 0
   131  000001                     MODBUS_RX@i:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x0
   135  000001                     	ds	1
   136  000002                     MODBUS_TX@i:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x1
   140  000002                     	ds	1
   141  000003                     ??_CRC_calc:
   142                           
   143                           ; 1 bytes @ 0x2
   144  000003                     	ds	7
   145  00000A                     CRC_calc@size:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x9
   149  00000A                     	ds	1
   150  00000B                     CRC_calc@i:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0xA
   154  00000B                     	ds	1
   155  00000C                     CRC_calc@j:
   156                           	callstack 0
   157                           
   158                           ; 1 bytes @ 0xB
   159  00000C                     	ds	1
   160  00000D                     CRC_calc@CRC:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0xC
   164  00000D                     	ds	2
   165  00000F                     ?_MODBUS_RW:
   166                           	callstack 0
   167  00000F                     MODBUS_RW@FC:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0xE
   171  00000F                     	ds	1
   172  000010                     MODBUS_RW@ADDR:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0xF
   176  000010                     	ds	2
   177  000012                     MODBUS_RW@N:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0x11
   181  000012                     	ds	2
   182  000014                     ??_MODBUS_RW:
   183                           
   184                           ; 1 bytes @ 0x13
   185  000014                     	ds	4
   186  000018                     MODBUS_RW@CRC_s:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x17
   190  000018                     	ds	2
   191  00001A                     MODBUS_RW@slave:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x19
   195  00001A                     	ds	1
   196  00001B                     MODBUS_RW@CRC:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x1A
   200  00001B                     	ds	2
   201  00001D                     MODBUS_RW@C_byte:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x1C
   205  00001D                     	ds	2
   206  00001F                     
   207                           ; 1 bytes @ 0x1E
   208                           
   209                           	psect	cstackCOMRAMl
   210  000000                     __pcstackCOMRAMl:
   211                           	callstack 0
   212  000000                     
   213                           ; 1 bytes @ 0x0
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 286 in file "AutoPLC.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   237 ;;Total ram usage:        0 bytes
   238 ;; Hardware stack levels required when called: 3
   239 ;; This function calls:
   240 ;;		_GPIO_CONFIG
   241 ;;		_REG_CONFIG
   242 ;;		_config
   243 ;;		_loop
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text0
   250  002D1E                     __ptext0:
   251                           	callstack 0
   252  002D1E                     _main:
   253                           	callstack 28
   254                           
   255                           ;AutoPLC.c: 288: GPIO_CONFIG();
   256                           
   257                           ;incstack = 0
   258  002D1E  ECB5  F016         	call	_GPIO_CONFIG	;wreg free
   259                           
   260                           ;AutoPLC.c: 289: REG_CONFIG();
   261  002D22  ECA5  F016         	call	_REG_CONFIG	;wreg free
   262                           
   263                           ;AutoPLC.c: 303: config();
   264  002D26  EC81  F016         	call	_config	;wreg free
   265  002D2A                     l1311:
   266                           
   267                           ;AutoPLC.c: 306: {;AutoPLC.c: 307: loop();
   268  002D2A  ECDF  F016         	call	_loop	;wreg free
   269  002D2E  D7FD               	goto	l1311
   270  002D30                     __end_of_main:
   271                           	callstack 0
   272                           
   273 ;; *************** function _loop *****************
   274 ;; Defined at:
   275 ;;		line 11 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   293 ;;Total ram usage:        0 bytes
   294 ;; Hardware stack levels used: 1
   295 ;; Hardware stack levels required when called: 2
   296 ;; This function calls:
   297 ;;		_MODBUS_RW
   298 ;;		_REF_DIO
   299 ;; This function is called by:
   300 ;;		_main
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text1
   305  002DBE                     __ptext1:
   306                           	callstack 0
   307  002DBE                     _loop:
   308                           	callstack 28
   309                           
   310                           ;main.c: 13: Z = MODBUS_RW(0x01,0x04,0x00,1);
   311                           
   312                           ;incstack = 0
   313  002DBE  0E04               	movlw	4
   314  002DC0  6E0F               	movwf	MODBUS_RW@FC^0,c
   315  002DC2  0E00               	movlw	0
   316  002DC4  6E11               	movwf	(MODBUS_RW@ADDR+1)^0,c
   317  002DC6  0E00               	movlw	0
   318  002DC8  6E10               	movwf	MODBUS_RW@ADDR^0,c
   319  002DCA  0E00               	movlw	0
   320  002DCC  6E13               	movwf	(MODBUS_RW@N+1)^0,c
   321  002DCE  0E01               	movlw	1
   322  002DD0  6E12               	movwf	MODBUS_RW@N^0,c
   323  002DD2  0E01               	movlw	1
   324  002DD4  EC85  F017         	call	_MODBUS_RW
   325  002DD8  C00F  F01F         	movff	?_MODBUS_RW,_Z	;volatile
   326  002DDC  C010  F020         	movff	?_MODBUS_RW+1,_Z+1	;volatile
   327                           
   328                           ;main.c: 14: if(Z > 0x0100)
   329  002DE0  041F               	decf	_Z^0,w,c	;volatile
   330  002DE2  0E01               	movlw	1
   331  002DE4  5820               	subwfb	(_Z+1)^0,w,c	;volatile
   332  002DE6  A0D8               	btfss	status,0,c
   333  002DE8  0012               	return	
   334                           
   335                           ;main.c: 15: {;main.c: 16: DOUT=M_ADU[4];
   336  002DEA  C024 F1E0          	movff	36,480
   337                           
   338                           ;main.c: 17: REF_DIO();
   339  002DEE  ECC6  F016         	call	_REF_DIO	;wreg free
   340  002DF2  0012               	return		;funcret
   341  002DF4                     __end_of_loop:
   342                           	callstack 0
   343                           
   344 ;; *************** function _REF_DIO *****************
   345 ;; Defined at:
   346 ;;		line 126 in file "AutoPLC.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; Hardware stack levels required when called: 1
   367 ;; This function calls:
   368 ;;		_USART_OFF
   369 ;;		_USART_ON
   370 ;; This function is called by:
   371 ;;		_loop
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text2
   376  002D8C                     __ptext2:
   377                           	callstack 0
   378  002D8C                     _REF_DIO:
   379                           	callstack 28
   380                           
   381                           ;AutoPLC.c: 129: USART_OFF();
   382                           
   383                           ;incstack = 0
   384  002D8C  EC8B  F016         	call	_USART_OFF	;wreg free
   385                           
   386                           ;AutoPLC.c: 130: SSPSTAT = 0b11000000;
   387  002D90  0EC0               	movlw	192
   388  002D92  6EC7               	movwf	199,c	;volatile
   389                           
   390                           ;AutoPLC.c: 131: SSPCON1 = 0b00100000;
   391  002D94  0E20               	movlw	32
   392  002D96  6EC6               	movwf	198,c	;volatile
   393                           
   394                           ;AutoPLC.c: 134: LATDbits.LATD1 = 1;
   395  002D98  828C               	bsf	140,1,c	;volatile
   396                           
   397                           ;AutoPLC.c: 135: LATDbits.LATD1 = 0;
   398  002D9A  928C               	bcf	140,1,c	;volatile
   399                           
   400                           ;AutoPLC.c: 136: LATDbits.LATD1 = 1;
   401  002D9C  828C               	bsf	140,1,c	;volatile
   402                           
   403                           ;AutoPLC.c: 138: LATDbits.LATD0 = 0;
   404  002D9E  908C               	bcf	140,0,c	;volatile
   405                           
   406                           ;AutoPLC.c: 140: SSPBUF = DOUT;
   407  002DA0  C1E0 FFC9          	movff	480,4041	;volatile
   408  002DA4                     l105:
   409  002DA4  A69E               	btfss	3998,3,c	;volatile
   410  002DA6  D7FE               	goto	l105
   411                           
   412                           ;AutoPLC.c: 142: SSPIF = 0;
   413  002DA8  969E               	bcf	3998,3,c	;volatile
   414                           
   415                           ;AutoPLC.c: 145: LATDbits.LATD0 = 1;
   416  002DAA  808C               	bsf	140,0,c	;volatile
   417                           
   418                           ;AutoPLC.c: 147: DIN = SSPBUF;
   419  002DAC  CFC9 F1DF          	movff	4041,479	;volatile
   420                           
   421                           ;AutoPLC.c: 150: SSPSTAT = 0x00;
   422  002DB0  0E00               	movlw	0
   423  002DB2  6EC7               	movwf	199,c	;volatile
   424                           
   425                           ;AutoPLC.c: 151: SSPCON1 = 0x00;
   426  002DB4  0E00               	movlw	0
   427  002DB6  6EC6               	movwf	198,c	;volatile
   428                           
   429                           ;AutoPLC.c: 152: USART_ON();
   430  002DB8  EC87  F016         	call	_USART_ON	;wreg free
   431  002DBC  0012               	return		;funcret
   432  002DBE                     __end_of_REF_DIO:
   433                           	callstack 0
   434                           
   435 ;; *************** function _USART_OFF *****************
   436 ;; Defined at:
   437 ;;		line 41 in file "AutoPLC.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		None
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_REF_DIO
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text3
   465  002D16                     __ptext3:
   466                           	callstack 0
   467  002D16                     _USART_OFF:
   468                           	callstack 28
   469                           
   470                           ;AutoPLC.c: 43: RCSTAbits.SPEN = 0;
   471                           
   472                           ;incstack = 0
   473  002D16  9EAB               	bcf	171,7,c	;volatile
   474                           
   475                           ;AutoPLC.c: 44: TRISCbits.RC7 = 0;
   476  002D18  9E94               	bcf	148,7,c	;volatile
   477                           
   478                           ;AutoPLC.c: 45: LATDbits.LATD4 = 1;
   479  002D1A  888C               	bsf	140,4,c	;volatile
   480  002D1C  0012               	return		;funcret
   481  002D1E                     __end_of_USART_OFF:
   482                           	callstack 0
   483                           
   484 ;; *************** function _MODBUS_RW *****************
   485 ;; Defined at:
   486 ;;		line 65 in file "MODBUS_RTU_APLC.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;  slave           1    wreg     unsigned char 
   489 ;;  FC              1   14[COMRAM] unsigned char 
   490 ;;  ADDR            2   15[COMRAM] unsigned int 
   491 ;;  N               2   17[COMRAM] unsigned int 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  slave           1   25[COMRAM] unsigned char 
   494 ;;  C_byte          2   28[COMRAM] unsigned int 
   495 ;;  CRC             2   26[COMRAM] unsigned int 
   496 ;;  CRC_s           2   23[COMRAM] unsigned int 
   497 ;; Return value:  Size  Location     Type
   498 ;;                  2   14[COMRAM] unsigned int 
   499 ;; Registers used:
   500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   506 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0
   507 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0
   508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0
   509 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0
   510 ;;Total ram usage:       16 bytes
   511 ;; Hardware stack levels used: 1
   512 ;; Hardware stack levels required when called: 1
   513 ;; This function calls:
   514 ;;		_CRC_calc
   515 ;;		_MODBUS_RX
   516 ;;		_MODBUS_TX
   517 ;; This function is called by:
   518 ;;		_loop
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text4
   523  002F0A                     __ptext4:
   524                           	callstack 0
   525  002F0A                     _MODBUS_RW:
   526                           	callstack 28
   527                           
   528                           ;incstack = 0
   529                           ;MODBUS_RW@slave stored from wreg
   530  002F0A  6E1A               	movwf	MODBUS_RW@slave^0,c
   531                           
   532                           ;MODBUS_RTU_APLC.c: 71: M_ADU[0] = slave;
   533  002F0C  C01A  F020         	movff	MODBUS_RW@slave,32
   534                           
   535                           ;MODBUS_RTU_APLC.c: 72: M_ADU[1] = FC;
   536  002F10  C00F  F021         	movff	MODBUS_RW@FC,33
   537                           
   538                           ;MODBUS_RTU_APLC.c: 73: M_ADU[2] = ADDR>>8;
   539  002F14  C011  F022         	movff	MODBUS_RW@ADDR+1,34
   540                           
   541                           ;MODBUS_RTU_APLC.c: 74: M_ADU[3] = ADDR & 0x00FF;
   542  002F18  C010  F023         	movff	MODBUS_RW@ADDR,35
   543                           
   544                           ;MODBUS_RTU_APLC.c: 75: M_ADU[4] = N>>8;
   545  002F1C  C013  F024         	movff	MODBUS_RW@N+1,36
   546                           
   547                           ;MODBUS_RTU_APLC.c: 76: M_ADU[5] = N & 0x00FF;
   548  002F20  C012  F025         	movff	MODBUS_RW@N,37
   549                           
   550                           ;MODBUS_RTU_APLC.c: 78: CRC = CRC_calc(6);
   551  002F24  0E06               	movlw	6
   552  002F26  EC3F  F017         	call	_CRC_calc
   553  002F2A  C001  F01B         	movff	?_CRC_calc,MODBUS_RW@CRC
   554  002F2E  C002  F01C         	movff	?_CRC_calc+1,MODBUS_RW@CRC+1
   555                           
   556                           ;MODBUS_RTU_APLC.c: 80: M_ADU[6] = CRC & 0x00FF;
   557  002F32  C01B  F026         	movff	MODBUS_RW@CRC,38
   558                           
   559                           ;MODBUS_RTU_APLC.c: 81: M_ADU[7] = CRC >> 8;
   560  002F36  C01C  F027         	movff	MODBUS_RW@CRC+1,39
   561                           
   562                           ;MODBUS_RTU_APLC.c: 83: MODBUS_TX(8);
   563  002F3A  0E08               	movlw	8
   564  002F3C  ECFA  F016         	call	_MODBUS_TX
   565                           
   566                           ;MODBUS_RTU_APLC.c: 84: C_byte = MODBUS_RX();
   567  002F40  EC1B  F017         	call	_MODBUS_RX	;wreg free
   568  002F44  6E14               	movwf	??_MODBUS_RW^0,c
   569  002F46  5014               	movf	??_MODBUS_RW^0,w,c
   570  002F48  6E1D               	movwf	MODBUS_RW@C_byte^0,c
   571  002F4A  6A1E               	clrf	(MODBUS_RW@C_byte+1)^0,c
   572                           
   573                           ;MODBUS_RTU_APLC.c: 86: if(C_byte == 0)
   574  002F4C  501D               	movf	MODBUS_RW@C_byte^0,w,c
   575  002F4E  101E               	iorwf	(MODBUS_RW@C_byte+1)^0,w,c
   576  002F50  A4D8               	btfss	status,2,c
   577  002F52  D005               	goto	l1253
   578                           
   579                           ;MODBUS_RTU_APLC.c: 87: {;MODBUS_RTU_APLC.c: 88: return 0x0400;
   580  002F54  0E04               	movlw	4
   581  002F56  6E10               	movwf	(?_MODBUS_RW+1)^0,c
   582  002F58  0E00               	movlw	0
   583  002F5A  6E0F               	movwf	?_MODBUS_RW^0,c
   584  002F5C  0012               	return	
   585  002F5E                     l1253:
   586                           
   587                           ;MODBUS_RTU_APLC.c: 89: };MODBUS_RTU_APLC.c: 90: CRC_s = CRC_calc(C_byte-2);
   588  002F5E  501D               	movf	MODBUS_RW@C_byte^0,w,c
   589  002F60  0FFE               	addlw	254
   590  002F62  EC3F  F017         	call	_CRC_calc
   591  002F66  C001  F018         	movff	?_CRC_calc,MODBUS_RW@CRC_s
   592  002F6A  C002  F019         	movff	?_CRC_calc+1,MODBUS_RW@CRC_s+1
   593                           
   594                           ;MODBUS_RTU_APLC.c: 92: if(CRC_s != ( (M_ADU[C_byte-1] <<8) | (M_ADU[C_byte-2]) ) )
   595  002F6E  0E1F               	movlw	31
   596  002F70  241D               	addwf	MODBUS_RW@C_byte^0,w,c
   597  002F72  6ED9               	movwf	fsr2l,c
   598  002F74  0E00               	movlw	0
   599  002F76  201E               	addwfc	(MODBUS_RW@C_byte+1)^0,w,c
   600  002F78  6EDA               	movwf	fsr2h,c
   601  002F7A  50DF               	movf	indf2,w,c
   602  002F7C  6E14               	movwf	??_MODBUS_RW^0,c
   603  002F7E  5014               	movf	??_MODBUS_RW^0,w,c
   604  002F80  6E16               	movwf	(??_MODBUS_RW+2)^0,c
   605  002F82  6A15               	clrf	(??_MODBUS_RW+1)^0,c
   606  002F84  0E1E               	movlw	30
   607  002F86  241D               	addwf	MODBUS_RW@C_byte^0,w,c
   608  002F88  6ED9               	movwf	fsr2l,c
   609  002F8A  0E00               	movlw	0
   610  002F8C  201E               	addwfc	(MODBUS_RW@C_byte+1)^0,w,c
   611  002F8E  6EDA               	movwf	fsr2h,c
   612  002F90  50DF               	movf	indf2,w,c
   613  002F92  6E17               	movwf	(??_MODBUS_RW+3)^0,c
   614  002F94  5017               	movf	(??_MODBUS_RW+3)^0,w,c
   615  002F96  1215               	iorwf	(??_MODBUS_RW+1)^0,f,c
   616  002F98  0E00               	movlw	0
   617  002F9A  1216               	iorwf	(??_MODBUS_RW+2)^0,f,c
   618  002F9C  5018               	movf	MODBUS_RW@CRC_s^0,w,c
   619  002F9E  1815               	xorwf	(??_MODBUS_RW+1)^0,w,c
   620  002FA0  E104               	bnz	u290
   621  002FA2  5019               	movf	(MODBUS_RW@CRC_s+1)^0,w,c
   622  002FA4  1816               	xorwf	(??_MODBUS_RW+2)^0,w,c
   623  002FA6  B4D8               	btfsc	status,2,c
   624  002FA8  D005               	goto	l1261
   625  002FAA                     u290:
   626                           
   627                           ;MODBUS_RTU_APLC.c: 93: {;MODBUS_RTU_APLC.c: 94: return 0x0100;
   628  002FAA  0E01               	movlw	1
   629  002FAC  6E10               	movwf	(?_MODBUS_RW+1)^0,c
   630  002FAE  0E00               	movlw	0
   631  002FB0  6E0F               	movwf	?_MODBUS_RW^0,c
   632  002FB2  0012               	return	
   633  002FB4                     l1261:
   634                           
   635                           ;MODBUS_RTU_APLC.c: 95: };MODBUS_RTU_APLC.c: 96: if( M_ADU[0] != slave || M_ADU[1] == FC
      +                           )
   636  002FB4  501A               	movf	MODBUS_RW@slave^0,w,c
   637  002FB6  1820               	xorwf	32,w,c
   638  002FB8  A4D8               	btfss	status,2,c
   639  002FBA  D004               	goto	u310
   640  002FBC  500F               	movf	MODBUS_RW@FC^0,w,c
   641  002FBE  1821               	xorwf	33,w,c
   642  002FC0  A4D8               	btfss	status,2,c
   643  002FC2  D005               	goto	l1269
   644  002FC4                     u310:
   645                           
   646                           ;MODBUS_RTU_APLC.c: 97: {;MODBUS_RTU_APLC.c: 98: return 0x0200;
   647  002FC4  0E02               	movlw	2
   648  002FC6  6E10               	movwf	(?_MODBUS_RW+1)^0,c
   649  002FC8  0E00               	movlw	0
   650  002FCA  6E0F               	movwf	?_MODBUS_RW^0,c
   651  002FCC  0012               	return	
   652  002FCE                     l1269:
   653                           
   654                           ;MODBUS_RTU_APLC.c: 99: };MODBUS_RTU_APLC.c: 100: if(FC == 0x05 || FC == 0x06)
   655  002FCE  0E05               	movlw	5
   656  002FD0  180F               	xorwf	MODBUS_RW@FC^0,w,c
   657  002FD2  B4D8               	btfsc	status,2,c
   658  002FD4  D004               	goto	u330
   659  002FD6  0E06               	movlw	6
   660  002FD8  180F               	xorwf	MODBUS_RW@FC^0,w,c
   661  002FDA  A4D8               	btfss	status,2,c
   662  002FDC  D00C               	goto	l204
   663  002FDE                     u330:
   664                           
   665                           ;MODBUS_RTU_APLC.c: 101: {;MODBUS_RTU_APLC.c: 102: if(CRC != CRC_s)
   666  002FDE  5018               	movf	MODBUS_RW@CRC_s^0,w,c
   667  002FE0  181B               	xorwf	MODBUS_RW@CRC^0,w,c
   668  002FE2  E104               	bnz	u340
   669  002FE4  5019               	movf	(MODBUS_RW@CRC_s+1)^0,w,c
   670  002FE6  181C               	xorwf	(MODBUS_RW@CRC+1)^0,w,c
   671  002FE8  B4D8               	btfsc	status,2,c
   672  002FEA  D005               	goto	l204
   673  002FEC                     u340:
   674                           
   675                           ;MODBUS_RTU_APLC.c: 103: {;MODBUS_RTU_APLC.c: 104: return 0x0300;
   676  002FEC  0E03               	movlw	3
   677  002FEE  6E10               	movwf	(?_MODBUS_RW+1)^0,c
   678  002FF0  0E00               	movlw	0
   679  002FF2  6E0F               	movwf	?_MODBUS_RW^0,c
   680  002FF4  0012               	return	
   681  002FF6                     l204:
   682                           
   683                           ;MODBUS_RTU_APLC.c: 105: };MODBUS_RTU_APLC.c: 106: };MODBUS_RTU_APLC.c: 108: return C_by
      +                          te;
   684  002FF6  C01D  F00F         	movff	MODBUS_RW@C_byte,?_MODBUS_RW
   685  002FFA  C01E  F010         	movff	MODBUS_RW@C_byte+1,?_MODBUS_RW+1
   686  002FFE  0012               	return		;funcret
   687  003000                     __end_of_MODBUS_RW:
   688                           	callstack 0
   689                           
   690 ;; *************** function _MODBUS_TX *****************
   691 ;; Defined at:
   692 ;;		line 4 in file "MODBUS_RTU_APLC.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  M_size          1    wreg     unsigned char 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  M_size          1    0[COMRAM] unsigned char 
   697 ;;  i               1    1[COMRAM] unsigned char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
   711 ;;Total ram usage:        2 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_MODBUS_RW
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text5
   721  002DF4                     __ptext5:
   722                           	callstack 0
   723  002DF4                     _MODBUS_TX:
   724                           	callstack 28
   725                           
   726                           ;incstack = 0
   727                           ;MODBUS_TX@M_size stored from wreg
   728  002DF4  6E01               	movwf	MODBUS_TX@M_size^0,c
   729                           
   730                           ;MODBUS_RTU_APLC.c: 6: uint8_t i;;MODBUS_RTU_APLC.c: 8: T0CON = 0b00000111;
   731  002DF6  0E07               	movlw	7
   732  002DF8  6ED5               	movwf	213,c	;volatile
   733                           
   734                           ;MODBUS_RTU_APLC.c: 9: INTCONbits.TMR0IF = 0;
   735  002DFA  94F2               	bcf	242,2,c	;volatile
   736                           
   737                           ;MODBUS_RTU_APLC.c: 10: TMR0L = (uint8_t)((0x10000 - ( 500 * 48000000/1024000))&0x00FF);
   738  002DFC  0EC0               	movlw	192
   739  002DFE  6ED6               	movwf	214,c	;volatile
   740                           
   741                           ;MODBUS_RTU_APLC.c: 11: TMR0H = (uint8_t)((0x10000 - ( 500 * 48000000/1024000))>>8);
   742  002E00  0E06               	movlw	6
   743  002E02  6ED7               	movwf	215,c	;volatile
   744                           
   745                           ;MODBUS_RTU_APLC.c: 12: T0CONbits.TMR0ON = 1;
   746  002E04  8ED5               	bsf	213,7,c	;volatile
   747  002E06                     l177:
   748  002E06  A4F2               	btfss	242,2,c	;volatile
   749  002E08  D7FE               	goto	l177
   750                           
   751                           ;MODBUS_RTU_APLC.c: 14: INTCONbits.TMR0IF = 0;
   752  002E0A  94F2               	bcf	242,2,c	;volatile
   753                           
   754                           ;MODBUS_RTU_APLC.c: 15: T0CONbits.TMR0ON = 0;
   755  002E0C  9ED5               	bcf	213,7,c	;volatile
   756                           
   757                           ;MODBUS_RTU_APLC.c: 17: for(i=0;i<M_size;++i)
   758  002E0E  0E00               	movlw	0
   759  002E10  6E02               	movwf	MODBUS_TX@i^0,c
   760  002E12  D00C               	goto	l1161
   761  002E14                     l1157:
   762                           
   763                           ;MODBUS_RTU_APLC.c: 18: {;MODBUS_RTU_APLC.c: 19: TXREG=M_ADU[i];
   764  002E14  0E20               	movlw	32
   765  002E16  2402               	addwf	MODBUS_TX@i^0,w,c
   766  002E18  6ED9               	movwf	fsr2l,c
   767  002E1A  6ADA               	clrf	fsr2h,c
   768  002E1C  0E00               	movlw	0
   769  002E1E  22DA               	addwfc	fsr2h,f,c
   770  002E20  50DF               	movf	indf2,w,c
   771  002E22  6EAD               	movwf	173,c	;volatile
   772  002E24                     l182:
   773  002E24  A89E               	btfss	158,4,c	;volatile
   774  002E26  D7FE               	goto	l182
   775                           
   776                           ;MODBUS_RTU_APLC.c: 21: PIR1bits.TXIF = 0;
   777  002E28  989E               	bcf	158,4,c	;volatile
   778  002E2A  2A02               	incf	MODBUS_TX@i^0,f,c
   779  002E2C                     l1161:
   780  002E2C  5001               	movf	MODBUS_TX@M_size^0,w,c
   781  002E2E  5C02               	subwf	MODBUS_TX@i^0,w,c
   782  002E30  B0D8               	btfsc	status,0,c
   783  002E32  0012               	return	
   784  002E34  D7EF               	goto	l1157
   785  002E36                     __end_of_MODBUS_TX:
   786                           	callstack 0
   787                           
   788 ;; *************** function _MODBUS_RX *****************
   789 ;; Defined at:
   790 ;;		line 25 in file "MODBUS_RTU_APLC.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  i               1    0[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      unsigned char 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
   807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
   808 ;;Total ram usage:        1 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_MODBUS_RW
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text6
   818  002E36                     __ptext6:
   819                           	callstack 0
   820  002E36                     _MODBUS_RX:
   821                           	callstack 28
   822                           
   823                           ;MODBUS_RTU_APLC.c: 27: uint8_t i=0;
   824                           
   825                           ;incstack = 0
   826  002E36  0E00               	movlw	0
   827  002E38  6E01               	movwf	MODBUS_RX@i^0,c
   828                           
   829                           ;MODBUS_RTU_APLC.c: 32: T0CON = 0b00000111;
   830  002E3A  0E07               	movlw	7
   831  002E3C  6ED5               	movwf	213,c	;volatile
   832                           
   833                           ;MODBUS_RTU_APLC.c: 35: INTCONbits.TMR0IF = 0;
   834  002E3E  94F2               	bcf	242,2,c	;volatile
   835                           
   836                           ;MODBUS_RTU_APLC.c: 36: TMR0L = (uint8_t)((0x10000 - ( 500 * 48000000/1024000))&0x00FF);
   837  002E40  0EC0               	movlw	192
   838  002E42  6ED6               	movwf	214,c	;volatile
   839                           
   840                           ;MODBUS_RTU_APLC.c: 37: TMR0H = (uint8_t)((0x10000 - ( 500 * 48000000/1024000))>>8);
   841  002E44  0E06               	movlw	6
   842  002E46  6ED7               	movwf	215,c	;volatile
   843                           
   844                           ;MODBUS_RTU_APLC.c: 38: T0CONbits.TMR0ON = 1;
   845  002E48  8ED5               	bsf	213,7,c	;volatile
   846                           
   847                           ;MODBUS_RTU_APLC.c: 40: while(INTCONbits.TMR0IF == 0 && i < 20)
   848  002E4A  D011               	goto	l1181
   849  002E4C                     l190:
   850                           
   851                           ;MODBUS_RTU_APLC.c: 41: {;MODBUS_RTU_APLC.c: 48: if(PIR1bits.RCIF == 1)
   852  002E4C  AA9E               	btfss	158,5,c	;volatile
   853  002E4E  D00F               	goto	l1181
   854                           
   855                           ;MODBUS_RTU_APLC.c: 49: {;MODBUS_RTU_APLC.c: 50: M_ADU[i++]=RCREG;
   856  002E50  0E20               	movlw	32
   857  002E52  2401               	addwf	MODBUS_RX@i^0,w,c
   858  002E54  6ED9               	movwf	fsr2l,c
   859  002E56  6ADA               	clrf	fsr2h,c
   860  002E58  0E00               	movlw	0
   861  002E5A  22DA               	addwfc	fsr2h,f,c
   862  002E5C  CFAE FFDF          	movff	4014,indf2	;volatile
   863  002E60  2A01               	incf	MODBUS_RX@i^0,f,c
   864                           
   865                           ;MODBUS_RTU_APLC.c: 51: PIR1bits.RCIF = 0;
   866  002E62  9A9E               	bcf	158,5,c	;volatile
   867                           
   868                           ;MODBUS_RTU_APLC.c: 52: INTCONbits.TMR0IF = 0;
   869  002E64  94F2               	bcf	242,2,c	;volatile
   870                           
   871                           ;MODBUS_RTU_APLC.c: 53: TMR0L = (uint8_t)((0x10000 - ( (11/9600)*3500 * 48000000/1024000
      +                          ))&0x00FF);
   872  002E66  0E00               	movlw	0
   873  002E68  6ED6               	movwf	214,c	;volatile
   874                           
   875                           ;MODBUS_RTU_APLC.c: 54: TMR0H = (uint8_t)((0x10000 - ( (11/9600)*3500 * 48000000/1024000
      +                          ))>>8);
   876  002E6A  0E00               	movlw	0
   877  002E6C  6ED7               	movwf	215,c	;volatile
   878  002E6E                     l1181:
   879  002E6E  B4F2               	btfsc	242,2,c	;volatile
   880  002E70  D003               	goto	u240
   881  002E72  0E13               	movlw	19
   882  002E74  6401               	cpfsgt	MODBUS_RX@i^0,c
   883  002E76  D7EA               	goto	l190
   884  002E78                     u240:
   885                           
   886                           ;MODBUS_RTU_APLC.c: 55: };MODBUS_RTU_APLC.c: 56: };MODBUS_RTU_APLC.c: 61: T0CONbits.TMR0
      +                          ON = 0;
   887  002E78  9ED5               	bcf	213,7,c	;volatile
   888                           
   889                           ;MODBUS_RTU_APLC.c: 62: return i;
   890  002E7A  5001               	movf	MODBUS_RX@i^0,w,c
   891  002E7C  0012               	return		;funcret
   892  002E7E                     __end_of_MODBUS_RX:
   893                           	callstack 0
   894                           
   895 ;; *************** function _CRC_calc *****************
   896 ;; Defined at:
   897 ;;		line 111 in file "MODBUS_RTU_APLC.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  size            1    wreg     unsigned char 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  size            1    9[COMRAM] unsigned char 
   902 ;;  CRC             2   12[COMRAM] unsigned int 
   903 ;;  j               1   11[COMRAM] unsigned char 
   904 ;;  i               1   10[COMRAM] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  2    0[COMRAM] unsigned int 
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
   914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
   915 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0
   916 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0
   917 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0
   918 ;;Total ram usage:       14 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_MODBUS_RW
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text7
   928  002E7E                     __ptext7:
   929                           	callstack 0
   930  002E7E                     _CRC_calc:
   931                           	callstack 28
   932                           
   933                           ;incstack = 0
   934                           ;CRC_calc@size stored from wreg
   935  002E7E  6E0A               	movwf	CRC_calc@size^0,c
   936                           
   937                           ;MODBUS_RTU_APLC.c: 113: uint16_t CRC = 0xFFFF;
   938  002E80  680D               	setf	CRC_calc@CRC^0,c
   939  002E82  680E               	setf	(CRC_calc@CRC+1)^0,c
   940                           
   941                           ;MODBUS_RTU_APLC.c: 114: uint8_t i,j;;MODBUS_RTU_APLC.c: 116: for(i = 0; i < size ;++i)
   942  002E84  0E00               	movlw	0
   943  002E86  6E0B               	movwf	CRC_calc@i^0,c
   944  002E88  D037               	goto	l1209
   945  002E8A                     l1193:
   946                           
   947                           ;MODBUS_RTU_APLC.c: 117: {;MODBUS_RTU_APLC.c: 118: CRC = (CRC & 0xFF00) | ( (CRC ^ M_ADU
      +                          [i]) & 0x00FF);
   948  002E8A  0E00               	movlw	0
   949  002E8C  6E03               	movwf	??_CRC_calc^0,c
   950  002E8E  0EFF               	movlw	255
   951  002E90  6E04               	movwf	(??_CRC_calc+1)^0,c
   952  002E92  C00D  F005         	movff	CRC_calc@CRC,??_CRC_calc+2
   953  002E96  C00E  F006         	movff	CRC_calc@CRC+1,??_CRC_calc+3
   954  002E9A  5003               	movf	??_CRC_calc^0,w,c
   955  002E9C  1605               	andwf	(??_CRC_calc+2)^0,f,c
   956  002E9E  5004               	movf	(??_CRC_calc+1)^0,w,c
   957  002EA0  1606               	andwf	(??_CRC_calc+3)^0,f,c
   958  002EA2  0E20               	movlw	32
   959  002EA4  240B               	addwf	CRC_calc@i^0,w,c
   960  002EA6  6ED9               	movwf	fsr2l,c
   961  002EA8  6ADA               	clrf	fsr2h,c
   962  002EAA  0E00               	movlw	0
   963  002EAC  22DA               	addwfc	fsr2h,f,c
   964  002EAE  50DF               	movf	indf2,w,c
   965  002EB0  6E07               	movwf	(??_CRC_calc+4)^0,c
   966  002EB2  5007               	movf	(??_CRC_calc+4)^0,w,c
   967  002EB4  180D               	xorwf	CRC_calc@CRC^0,w,c
   968  002EB6  6E08               	movwf	(??_CRC_calc+5)^0,c
   969  002EB8  0E00               	movlw	0
   970  002EBA  180E               	xorwf	(CRC_calc@CRC+1)^0,w,c
   971  002EBC  6E09               	movwf	(??_CRC_calc+6)^0,c
   972  002EBE  5008               	movf	(??_CRC_calc+5)^0,w,c
   973  002EC0  1005               	iorwf	(??_CRC_calc+2)^0,w,c
   974  002EC2  6E0D               	movwf	CRC_calc@CRC^0,c
   975  002EC4  5006               	movf	(??_CRC_calc+3)^0,w,c
   976  002EC6  6E0E               	movwf	(CRC_calc@CRC+1)^0,c
   977                           
   978                           ;MODBUS_RTU_APLC.c: 119: for(j = 0; j<8; ++j)
   979  002EC8  0E00               	movlw	0
   980  002ECA  6E0C               	movwf	CRC_calc@j^0,c
   981  002ECC                     l212:
   982                           
   983                           ;MODBUS_RTU_APLC.c: 120: {;MODBUS_RTU_APLC.c: 121: if(CRC & 0x0001)
   984  002ECC  A00D               	btfss	CRC_calc@CRC^0,0,c
   985  002ECE  D00C               	goto	l1203
   986                           
   987                           ;MODBUS_RTU_APLC.c: 122: {;MODBUS_RTU_APLC.c: 123: CRC = (CRC>>1)^ 0xA001;
   988  002ED0  90D8               	bcf	status,0,c
   989  002ED2  300E               	rrcf	(CRC_calc@CRC+1)^0,w,c
   990  002ED4  6E04               	movwf	(??_CRC_calc+1)^0,c
   991  002ED6  300D               	rrcf	CRC_calc@CRC^0,w,c
   992  002ED8  6E03               	movwf	??_CRC_calc^0,c
   993  002EDA  0E01               	movlw	1
   994  002EDC  1803               	xorwf	??_CRC_calc^0,w,c
   995  002EDE  6E0D               	movwf	CRC_calc@CRC^0,c
   996  002EE0  0EA0               	movlw	160
   997  002EE2  1804               	xorwf	(??_CRC_calc+1)^0,w,c
   998  002EE4  6E0E               	movwf	(CRC_calc@CRC+1)^0,c
   999                           
  1000                           ;MODBUS_RTU_APLC.c: 124: }
  1001  002EE6  D003               	goto	l215
  1002  002EE8                     l1203:
  1003                           
  1004                           ;MODBUS_RTU_APLC.c: 125: else CRC>>=1;
  1005  002EE8  90D8               	bcf	status,0,c
  1006  002EEA  320E               	rrcf	(CRC_calc@CRC+1)^0,f,c
  1007  002EEC  320D               	rrcf	CRC_calc@CRC^0,f,c
  1008  002EEE                     l215:
  1009  002EEE  2A0C               	incf	CRC_calc@j^0,f,c
  1010  002EF0  0E07               	movlw	7
  1011  002EF2  640C               	cpfsgt	CRC_calc@j^0,c
  1012  002EF4  D7EB               	goto	l212
  1013  002EF6  2A0B               	incf	CRC_calc@i^0,f,c
  1014  002EF8                     l1209:
  1015  002EF8  500A               	movf	CRC_calc@size^0,w,c
  1016  002EFA  5C0B               	subwf	CRC_calc@i^0,w,c
  1017  002EFC  A0D8               	btfss	status,0,c
  1018  002EFE  D7C5               	goto	l1193
  1019                           
  1020                           ;MODBUS_RTU_APLC.c: 126: };MODBUS_RTU_APLC.c: 127: };MODBUS_RTU_APLC.c: 128: return CRC;
  1021  002F00  C00D  F001         	movff	CRC_calc@CRC,?_CRC_calc
  1022  002F04  C00E  F002         	movff	CRC_calc@CRC+1,?_CRC_calc+1
  1023  002F08  0012               	return		;funcret
  1024  002F0A                     __end_of_CRC_calc:
  1025                           	callstack 0
  1026                           
  1027 ;; *************** function _config *****************
  1028 ;; Defined at:
  1029 ;;		line 6 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 3F/1
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 2
  1050 ;; This function calls:
  1051 ;;		_USART_init
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text8
  1058  002D02                     __ptext8:
  1059                           	callstack 0
  1060  002D02                     _config:
  1061                           	callstack 28
  1062                           
  1063                           ; BSR set to: 1
  1064                           ;main.c: 8: USART_init();;
  1065                           
  1066                           ;incstack = 0
  1067  002D02  EC98  F016         	call	_USART_init	;wreg free
  1068  002D06  0012               	return		;funcret
  1069  002D08                     __end_of_config:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _USART_init *****************
  1073 ;; Defined at:
  1074 ;;		line 48 in file "AutoPLC.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 3F/1
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 1
  1095 ;; This function calls:
  1096 ;;		_USART_ON
  1097 ;; This function is called by:
  1098 ;;		_config
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text9
  1103  002D30                     __ptext9:
  1104                           	callstack 0
  1105  002D30                     _USART_init:
  1106                           	callstack 28
  1107                           
  1108                           ; BSR set to: 1
  1109                           ;AutoPLC.c: 51: BAUDCONbits.BRG16 = 1;
  1110                           
  1111                           ;incstack = 0
  1112  002D30  86B8               	bsf	184,3,c	;volatile
  1113                           
  1114                           ;AutoPLC.c: 52: TXSTAbits.SYNC = 0;
  1115  002D32  98AC               	bcf	172,4,c	;volatile
  1116                           
  1117                           ;AutoPLC.c: 53: TXSTAbits.BRGH = 0;
  1118  002D34  94AC               	bcf	172,2,c	;volatile
  1119                           
  1120                           ; BSR set to: 1
  1121                           ;AutoPLC.c: 54: SPBRG = (uint8_t)((((48000000/9600)/16)-1) & 0x00FF);
  1122  002D36  0E37               	movlw	55
  1123  002D38  6EAF               	movwf	175,c	;volatile
  1124                           
  1125                           ;AutoPLC.c: 55: SPBRGH = (uint8_t)((((48000000/9600)/16)-1) >> 8);
  1126  002D3A  0E01               	movlw	1
  1127  002D3C  6EB0               	movwf	176,c	;volatile
  1128                           
  1129                           ; BSR set to: 1
  1130                           ;AutoPLC.c: 70: TRISCbits.RC6 = 0;
  1131  002D3E  9C94               	bcf	148,6,c	;volatile
  1132                           
  1133                           ; BSR set to: 1
  1134                           ;AutoPLC.c: 71: TXSTAbits.TXEN = 1;
  1135  002D40  8AAC               	bsf	172,5,c	;volatile
  1136                           
  1137                           ; BSR set to: 1
  1138                           ;AutoPLC.c: 72: RCSTAbits.CREN = 1;
  1139  002D42  88AB               	bsf	171,4,c	;volatile
  1140                           
  1141                           ; BSR set to: 1
  1142                           ;AutoPLC.c: 73: USART_ON();
  1143  002D44  EC87  F016         	call	_USART_ON	;wreg free
  1144  002D48  0012               	return		;funcret
  1145  002D4A                     __end_of_USART_init:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _USART_ON *****************
  1149 ;; Defined at:
  1150 ;;		line 35 in file "AutoPLC.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		None
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_USART_init
  1174 ;;		_REF_DIO
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text10
  1179  002D0E                     __ptext10:
  1180                           	callstack 0
  1181  002D0E                     _USART_ON:
  1182                           	callstack 28
  1183                           
  1184                           ;AutoPLC.c: 37: TRISCbits.RC7 = 1;
  1185                           
  1186                           ;incstack = 0
  1187  002D0E  8E94               	bsf	148,7,c	;volatile
  1188                           
  1189                           ;AutoPLC.c: 38: LATDbits.LATD4 = 0;
  1190  002D10  988C               	bcf	140,4,c	;volatile
  1191                           
  1192                           ;AutoPLC.c: 39: RCSTAbits.SPEN = 1;
  1193  002D12  8EAB               	bsf	171,7,c	;volatile
  1194  002D14  0012               	return		;funcret
  1195  002D16                     __end_of_USART_ON:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _REG_CONFIG *****************
  1199 ;; Defined at:
  1200 ;;		line 272 in file "AutoPLC.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 3F/1
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text11
  1228  002D4A                     __ptext11:
  1229                           	callstack 0
  1230  002D4A                     _REG_CONFIG:
  1231                           	callstack 30
  1232                           
  1233                           ;AutoPLC.c: 274: ADCON1 = 0b00010101;
  1234                           
  1235                           ;incstack = 0
  1236  002D4A  0E15               	movlw	21
  1237  002D4C  6EC1               	movwf	193,c	;volatile
  1238                           
  1239                           ;AutoPLC.c: 275: ADCON2 = 0b10000000;
  1240  002D4E  0E80               	movlw	128
  1241  002D50  6EC0               	movwf	192,c	;volatile
  1242                           
  1243                           ;AutoPLC.c: 277: EAIN = 0b00000001011110111;
  1244  002D52  0E02               	movlw	2
  1245  002D54  0101               	movlb	1	; () banked
  1246  002D56  6FE7               	movwf	231,b
  1247  002D58  0EF7               	movlw	247
  1248  002D5A  6FE6               	movwf	230,b
  1249                           
  1250                           ;AutoPLC.c: 278: SAIN = 0x00;
  1251  002D5C  0E00               	movlw	0
  1252  002D5E  6FE1               	movwf	225,b
  1253                           
  1254                           ;AutoPLC.c: 279: DOUT = 0x00;
  1255  002D60  0E00               	movlw	0
  1256  002D62  6FE0               	movwf	224,b
  1257                           
  1258                           ;AutoPLC.c: 280: DIN = 0x00;
  1259  002D64  0E00               	movlw	0
  1260  002D66  6FDF               	movwf	223,b
  1261                           
  1262                           ; BSR set to: 1
  1263  002D68  0012               	return		;funcret
  1264  002D6A                     __end_of_REG_CONFIG:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _GPIO_CONFIG *****************
  1268 ;; Defined at:
  1269 ;;		line 258 in file "AutoPLC.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:    COMRAMh COMRAMl   BANK0BANK1hhhBANK1hhl BANK1hl  BANK1l   BANK2   BANK3   BANK4   BANK5   BANK6   BANK
      +7
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  1287 ;;Total ram usage:        0 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text12
  1297  002D6A                     __ptext12:
  1298                           	callstack 0
  1299  002D6A                     _GPIO_CONFIG:
  1300                           	callstack 30
  1301                           
  1302                           ;AutoPLC.c: 260: LATA = 0xFF;
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;incstack = 0
  1306  002D6A  6889               	setf	137,c	;volatile
  1307                           
  1308                           ;AutoPLC.c: 261: LATB = 0b00011101;
  1309  002D6C  0E1D               	movlw	29
  1310  002D6E  6E8A               	movwf	138,c	;volatile
  1311                           
  1312                           ;AutoPLC.c: 262: LATC = 0xF3;
  1313  002D70  0EF3               	movlw	243
  1314  002D72  6E8B               	movwf	139,c	;volatile
  1315                           
  1316                           ;AutoPLC.c: 263: LATD = 0x0F;
  1317  002D74  0E0F               	movlw	15
  1318  002D76  6E8C               	movwf	140,c	;volatile
  1319                           
  1320                           ;AutoPLC.c: 264: LATE = 0xFF;
  1321  002D78  688D               	setf	141,c	;volatile
  1322                           
  1323                           ;AutoPLC.c: 266: TRISA = 0b11111111;
  1324  002D7A  6892               	setf	146,c	;volatile
  1325                           
  1326                           ;AutoPLC.c: 267: TRISB = 0b00011100;
  1327  002D7C  0E1C               	movlw	28
  1328  002D7E  6E93               	movwf	147,c	;volatile
  1329                           
  1330                           ;AutoPLC.c: 268: TRISC = 0b00111000;
  1331  002D80  0E38               	movlw	56
  1332  002D82  6E94               	movwf	148,c	;volatile
  1333                           
  1334                           ;AutoPLC.c: 269: TRISD = 0b00000000;
  1335  002D84  0E00               	movlw	0
  1336  002D86  6E95               	movwf	149,c	;volatile
  1337                           
  1338                           ;AutoPLC.c: 270: TRISE = 0b11111111;
  1339  002D88  6896               	setf	150,c	;volatile
  1340  002D8A  0012               	return		;funcret
  1341  002D8C                     __end_of_GPIO_CONFIG:
  1342                           	callstack 0
  1343  0000                     
  1344                           	psect	rparam
  1345  0000                     
  1346                           	psect	idloc
  1347                           
  1348                           ;Config register IDLOC0 @ 0x200000
  1349                           ;	unspecified, using default values
  1350  200000                     	org	2097152
  1351  200000  FF                 	db	255
  1352                           
  1353                           ;Config register IDLOC1 @ 0x200001
  1354                           ;	unspecified, using default values
  1355  200001                     	org	2097153
  1356  200001  FF                 	db	255
  1357                           
  1358                           ;Config register IDLOC2 @ 0x200002
  1359                           ;	unspecified, using default values
  1360  200002                     	org	2097154
  1361  200002  FF                 	db	255
  1362                           
  1363                           ;Config register IDLOC3 @ 0x200003
  1364                           ;	unspecified, using default values
  1365  200003                     	org	2097155
  1366  200003  FF                 	db	255
  1367                           
  1368                           ;Config register IDLOC4 @ 0x200004
  1369                           ;	unspecified, using default values
  1370  200004                     	org	2097156
  1371  200004  FF                 	db	255
  1372                           
  1373                           ;Config register IDLOC5 @ 0x200005
  1374                           ;	unspecified, using default values
  1375  200005                     	org	2097157
  1376  200005  FF                 	db	255
  1377                           
  1378                           ;Config register IDLOC6 @ 0x200006
  1379                           ;	unspecified, using default values
  1380  200006                     	org	2097158
  1381  200006  FF                 	db	255
  1382                           
  1383                           ;Config register IDLOC7 @ 0x200007
  1384                           ;	unspecified, using default values
  1385  200007                     	org	2097159
  1386  200007  FF                 	db	255
  1387                           
  1388                           	psect	config
  1389                           
  1390                           ;Config register CONFIG1L @ 0x300000
  1391                           ;	PLL Prescaler Selection bits
  1392                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
  1393                           ;	System Clock Postscaler Selection bits
  1394                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1395                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1396                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1397  300000                     	org	3145728
  1398  300000  23                 	db	35
  1399                           
  1400                           ;Config register CONFIG1H @ 0x300001
  1401                           ;	Oscillator Selection bits
  1402                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1403                           ;	Fail-Safe Clock Monitor Enable bit
  1404                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1405                           ;	Internal/External Oscillator Switchover bit
  1406                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1407  300001                     	org	3145729
  1408  300001  0E                 	db	14
  1409                           
  1410                           ;Config register CONFIG2L @ 0x300002
  1411                           ;	Power-up Timer Enable bit
  1412                           ;	PWRT = OFF, PWRT disabled
  1413                           ;	Brown-out Reset Enable bits
  1414                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1415                           ;	Brown-out Reset Voltage bits
  1416                           ;	BORV = 3, Minimum setting 2.05V
  1417                           ;	USB Voltage Regulator Enable bit
  1418                           ;	VREGEN = ON, USB voltage regulator enabled
  1419  300002                     	org	3145730
  1420  300002  3F                 	db	63
  1421                           
  1422                           ;Config register CONFIG2H @ 0x300003
  1423                           ;	Watchdog Timer Enable bit
  1424                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1425                           ;	Watchdog Timer Postscale Select bits
  1426                           ;	WDTPS = 32768, 1:32768
  1427  300003                     	org	3145731
  1428  300003  1E                 	db	30
  1429                           
  1430                           ; Padding undefined space
  1431  300004                     	org	3145732
  1432  300004  FF                 	db	255
  1433                           
  1434                           ;Config register CONFIG3H @ 0x300005
  1435                           ;	CCP2 MUX bit
  1436                           ;	CCP2MX = 0x1, unprogrammed default
  1437                           ;	PORTB A/D Enable bit
  1438                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1439                           ;	Low-Power Timer 1 Oscillator Enable bit
  1440                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1441                           ;	MCLR Pin Enable bit
  1442                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1443  300005                     	org	3145733
  1444  300005  81                 	db	129
  1445                           
  1446                           ;Config register CONFIG4L @ 0x300006
  1447                           ;	Stack Full/Underflow Reset Enable bit
  1448                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1449                           ;	Single-Supply ICSP Enable bit
  1450                           ;	LVP = OFF, Single-Supply ICSP disabled
  1451                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1452                           ;	ICPRT = 0x0, unprogrammed default
  1453                           ;	Extended Instruction Set Enable bit
  1454                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1455                           ;	Background Debugger Enable bit
  1456                           ;	DEBUG = 0x1, unprogrammed default
  1457  300006                     	org	3145734
  1458  300006  81                 	db	129
  1459                           
  1460                           ; Padding undefined space
  1461  300007                     	org	3145735
  1462  300007  FF                 	db	255
  1463                           
  1464                           ;Config register CONFIG5L @ 0x300008
  1465                           ;	Code Protection bit
  1466                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1467                           ;	Code Protection bit
  1468                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1469                           ;	Code Protection bit
  1470                           ;	CP2 = 0x1, unprogrammed default
  1471                           ;	Code Protection bit
  1472                           ;	CP3 = 0x1, unprogrammed default
  1473  300008                     	org	3145736
  1474  300008  0F                 	db	15
  1475                           
  1476                           ;Config register CONFIG5H @ 0x300009
  1477                           ;	Boot Block Code Protection bit
  1478                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1479                           ;	Data EEPROM Code Protection bit
  1480                           ;	CPD = 0x1, unprogrammed default
  1481  300009                     	org	3145737
  1482  300009  C0                 	db	192
  1483                           
  1484                           ;Config register CONFIG6L @ 0x30000A
  1485                           ;	Write Protection bit
  1486                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1487                           ;	Write Protection bit
  1488                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1489                           ;	Write Protection bit
  1490                           ;	WRT2 = 0x1, unprogrammed default
  1491                           ;	Write Protection bit
  1492                           ;	WRT3 = 0x1, unprogrammed default
  1493  30000A                     	org	3145738
  1494  30000A  0F                 	db	15
  1495                           
  1496                           ;Config register CONFIG6H @ 0x30000B
  1497                           ;	Configuration Register Write Protection bit
  1498                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1499                           ;	Boot Block Write Protection bit
  1500                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1501                           ;	Data EEPROM Write Protection bit
  1502                           ;	WRTD = 0x1, unprogrammed default
  1503  30000B                     	org	3145739
  1504  30000B  E0                 	db	224
  1505                           
  1506                           ;Config register CONFIG7L @ 0x30000C
  1507                           ;	Table Read Protection bit
  1508                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1509                           ;	Table Read Protection bit
  1510                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1511                           ;	Table Read Protection bit
  1512                           ;	EBTR2 = 0x1, unprogrammed default
  1513                           ;	Table Read Protection bit
  1514                           ;	EBTR3 = 0x1, unprogrammed default
  1515  30000C                     	org	3145740
  1516  30000C  0F                 	db	15
  1517                           
  1518                           ;Config register CONFIG7H @ 0x30000D
  1519                           ;	Boot Block Table Read Protection bit
  1520                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1521  30000D                     	org	3145741
  1522  30000D  40                 	db	64
  1523                           tosu	equ	0xFFF
  1524                           tosh	equ	0xFFE
  1525                           tosl	equ	0xFFD
  1526                           stkptr	equ	0xFFC
  1527                           pclatu	equ	0xFFB
  1528                           pclath	equ	0xFFA
  1529                           pcl	equ	0xFF9
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           indf0	equ	0xFEF
  1537                           postinc0	equ	0xFEE
  1538                           postdec0	equ	0xFED
  1539                           preinc0	equ	0xFEC
  1540                           plusw0	equ	0xFEB
  1541                           fsr0h	equ	0xFEA
  1542                           fsr0l	equ	0xFE9
  1543                           wreg	equ	0xFE8
  1544                           indf1	equ	0xFE7
  1545                           postinc1	equ	0xFE6
  1546                           postdec1	equ	0xFE5
  1547                           preinc1	equ	0xFE4
  1548                           plusw1	equ	0xFE3
  1549                           fsr1h	equ	0xFE2
  1550                           fsr1l	equ	0xFE1
  1551                           bsr	equ	0xFE0
  1552                           indf2	equ	0xFDF
  1553                           postinc2	equ	0xFDE
  1554                           postdec2	equ	0xFDD
  1555                           preinc2	equ	0xFDC
  1556                           plusw2	equ	0xFDB
  1557                           fsr2h	equ	0xFDA
  1558                           fsr2l	equ	0xFD9
  1559                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          64     30      32
    COMRAMl          31      0       0
    BANK0           160      0       0
    BANK1hhh         16      0       0
    BANK1hhl          8      0       0
    BANK1hl           4      0       0
    BANK1l          223      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAMh

    _loop->_MODBUS_RW
    _MODBUS_RW->_CRC_calc

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1hhh

    None.

Critical Paths under _main in BANK1hhl

    None.

Critical Paths under _main in BANK1hl

    None.

Critical Paths under _main in BANK1l

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1039
                        _GPIO_CONFIG
                         _REG_CONFIG
                             _config
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    1039
                          _MODBUS_RW
                            _REF_DIO
 ---------------------------------------------------------------------------------
 (2) _REF_DIO                                              0     0      0       0
                          _USART_OFF
                           _USART_ON
 ---------------------------------------------------------------------------------
 (3) _USART_OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MODBUS_RW                                           16    11      5    1039
                                             14 COMRAMh   16    11      5
                           _CRC_calc
                          _MODBUS_RX
                          _MODBUS_TX
 ---------------------------------------------------------------------------------
 (3) _MODBUS_TX                                            2     2      0      68
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (3) _MODBUS_RX                                            1     1      0      68
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (3) _CRC_calc                                            14    12      2     228
                                              0 COMRAMh   14    12      2
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
                         _USART_init
 ---------------------------------------------------------------------------------
 (2) _USART_init                                           0     0      0       0
                           _USART_ON
 ---------------------------------------------------------------------------------
 (3) _USART_ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _REG_CONFIG                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_CONFIG                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_CONFIG
   _REG_CONFIG
   _config
     _USART_init
       _USART_ON
   _loop
     _MODBUS_RW
       _CRC_calc
       _MODBUS_RX
       _MODBUS_TX
     _REF_DIO
       _USART_OFF
       _USART_ON

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAMh          40      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMRAMl          1F      0       0       1        0.0%
COMRAMh             40     1E      20       2       50.0%
COMRAMl             1F      0       0       3        0.0%
STACK                0      0       0       4        0.0%
DATA                 0      0      20       5        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0      0       0       7        0.0%
BITBANK1hhh         10      0       0       8        0.0%
BITBANK1hhl          8      0       0       9        0.0%
BITBANK1hl           4      0       0      10        0.0%
BITBANK1l           DF      0       0      11        0.0%
BANK1hhh            10      0       0      12        0.0%
BANK1hhl             8      0       0      13        0.0%
BANK1hl              4      0       0      14        0.0%
BANK1l              DF      0       0      15        0.0%
BITBANK2           100      0       0      16        0.0%
BANK2              100      0       0      17        0.0%
BITBANK3           100      0       0      18        0.0%
BANK3              100      0       0      19        0.0%
BITBANK4           100      0       0      20        0.0%
BANK4              100      0       0      21        0.0%
BITBANK5           100      0       0      22        0.0%
BANK5              100      0       0      23        0.0%
ABS                  0      0      20      24        0.0%
BITBANK6           100      0       0      25        0.0%
BANK6              100      0       0      26        0.0%
BITBANK7           100      0       0      27        0.0%
BANK7              100      0       0      28        0.0%
BIGRAMhhh          610      0       0      29        0.0%
BIGRAMhhl            8      0       0      30        0.0%
BIGRAMhl             4      0       0      31        0.0%
BIGRAMlh           1BF      0       0      32        0.0%
BIGRAMll            1F      0       0      33        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 06 08:01:32 2022

                      _Z 001F             ?_GPIO_CONFIG 0001                      l105 2DA4  
                    l212 2ECC                      l204 2FF6                      l215 2EEE  
                    l190 2E4C                      l182 2E24                      l177 2E06  
                    _AIN 0001F0                      _DIN 0001DF                      u310 2FC4  
                    u240 2E78                      u330 2FDE                      u340 2FEC  
                    u290 2FAA              CRC_calc@CRC 000D                     l1203 2EE8  
                   l1311 2D2A                     l1209 2EF8                     l1161 2E2C  
                   l1181 2E6E                     l1157 2E14                     l1261 2FB4  
                   l1253 2F5E                     l1193 2E8A                     l1269 2FCE  
                   _EAIN 0001E6                     _AOUT 0001E8                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   _LATE 000F8D                     _DOUT 0001E0          __end_of_REF_DIO 2DBE  
                   _SAIN 0001E1                     _main 2D1E                     _loop 2DBE  
            ?_REG_CONFIG 0001                     indf2 000FDF                     fsr2l 000FD9  
                   start 0004       __size_of_MODBUS_RW 00F6       __size_of_MODBUS_RX 0048  
           ___param_bank 000000       __size_of_MODBUS_TX 0042         __end_of_CRC_calc 2F0A  
                  ?_main 0001                    ?_loop 0001             CRC_calc@size 000A  
                  _T0CON 000FD5                    _RCREG 000FAE                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _M_ADU 000020  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _SSPIF 007CF3  
                  _TXREG 000FAD         __end_of_USART_ON 2D16       __size_of_USART_OFF 0008  
                  status 000FD8              ?_USART_init 0000          __initialization 2D08  
           __end_of_main 2D30             __end_of_loop 2DF4                   ??_main 001F  
                 ??_loop 001F            __activetblptr 000000      __size_of_REG_CONFIG 0020  
            MODBUS_RW@FC 000F                ??_REF_DIO 0001        __end_of_MODBUS_RW 3000  
      __end_of_MODBUS_RX 2E7E        __end_of_MODBUS_TX 2E36                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _SPBRGH 000FB0                   _SSPBUF 000FC9  
                 _config 2D02                   isa$std 000001        __end_of_USART_OFF 2D1E  
   __size_of_GPIO_CONFIG 0022      __size_of_USART_init 001A                ?_CRC_calc 0001  
             __accesstop 0060  __end_of__initialization 2D08            ___rparam_used 000001  
              CRC_calc@i 000B                CRC_calc@j 000C           MODBUS_RW@CRC_s 0018  
              ?_USART_ON 0001           MODBUS_RW@slave 001A               ??_CRC_calc 0003  
           MODBUS_RW@CRC 001B             ??_REG_CONFIG 0001                  ?_config 0001  
             ??_USART_ON 0001       __end_of_REG_CONFIG 2D6A                  _REF_DIO 2D8C  
                _SSPCON1 000FC6                  _SSPSTAT 000FC7                  __Hparam 0000  
                __Lparam 0000             ??_USART_init 0001          __size_of_config 0006  
                __pcinit 2D08                  __ramtop 0800                  __ptext0 2D1E  
                __ptext1 2DBE                  __ptext2 2D8C                  __ptext3 2D16  
                __ptext4 2F0A                  __ptext5 2DF4                  __ptext6 2E36  
                __ptext7 2E7E                  __ptext8 2D02                  __ptext9 2D30  
              _T0CONbits 000FD5       __end_of_USART_init 2D4A     end_of_initialization 2D08  
              _MODBUS_RW 2F0A                _MODBUS_RX 2E36                _MODBUS_TX 2DF4  
              _RCSTAbits 000FAB                _USART_OFF 2D16                _TRISCbits 000F94  
             ?_MODBUS_RW 000F               ?_MODBUS_RX 0001               ?_MODBUS_TX 0001  
              _TXSTAbits 000FAC        __size_of_CRC_calc 008C          __pcstackCOMRAMh 0001  
        __pcstackCOMRAMl 0000            ??_GPIO_CONFIG 0001              _BAUDCONbits 000FB8  
         __end_of_config 2D08          MODBUS_RW@C_byte 001D        __size_of_USART_ON 0008  
    start_initialization 2D08               ?_USART_OFF 0001          MODBUS_TX@M_size 0001  
             MODBUS_RW@N 0012               MODBUS_RX@i 0001               MODBUS_TX@i 0002  
               ??_config 0001      __end_of_GPIO_CONFIG 2D8C                 ?_REF_DIO 0000  
          MODBUS_RW@ADDR 0010              __pnvCOMRAMh 001F              ??_MODBUS_RW 0014  
            ??_MODBUS_RX 0001              ??_MODBUS_TX 0001              ??_USART_OFF 0001  
               _CRC_calc 2E7E                 _LATDbits 000F8C                 _PIR1bits 000F9E  
            _GPIO_CONFIG 2D6A                 _USART_ON 2D0E         __size_of_REF_DIO 0032  
               __Hrparam 0000                 __Lrparam 0000                 __ptext10 2D0E  
               __ptext11 2D4A                 __ptext12 2D6A            __size_of_main 0012  
          __size_of_loop 0036                 isa$xinst 000000               _INTCONbits 000FF2  
             _REG_CONFIG 2D4A               _USART_init 2D30  
